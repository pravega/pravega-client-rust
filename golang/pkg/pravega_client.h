/* Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved. */

#ifndef PRAVEGA_CLIENT_H
#define PRAVEGA_CLIENT_H

/* Generated with cbindgen:0.23.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct StreamManager StreamManager;

typedef struct StreamScalingPolicy StreamScalingPolicy;

typedef struct StreamWriter StreamWriter;

typedef struct Buffer {
  uint8_t *ptr;
  uintptr_t len;
  uintptr_t cap;
} Buffer;

void free_buffer(struct Buffer buf);

struct StreamManager *stream_manager_new(const char *uri, struct Buffer *err);

void stream_manager_destroy(struct StreamManager *manager);

bool stream_manager_create_scope(const struct StreamManager *manager,
                                 const char *scope,
                                 struct Buffer *err);

bool stream_manager_create_stream(const struct StreamManager *manager,
                                  const char *scope,
                                  const char *stream,
                                  int32_t num,
                                  struct Buffer *err);

struct StreamWriter *stream_writer_new(const struct StreamManager *manager,
                                       const char *scope,
                                       const char *stream,
                                       uintptr_t max_inflight_events,
                                       struct Buffer *err);

void stream_writer_destroy(struct StreamWriter *writer);

struct StreamScalingPolicy *fixed_scaling_policy(int32_t num);

void scaling_policy_destroy(struct StreamScalingPolicy *policy);

void stream_writer_write_event(struct StreamWriter *writer,
                               struct Buffer event,
                               struct Buffer routing_key,
                               struct Buffer *err);

void stream_writer_flush(struct StreamWriter *writer, struct Buffer *err);

#endif /* PRAVEGA_CLIENT_H */
